update-versions:
  stage: deploy
  image: node
  before_script:
    - which ssh-agent || ( apt-get update -qy && apt-get install openssh-client -qqy )
    - eval `ssh-agent -s`
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

    - git config --global user.email "coral-version@localhost"
    - git config --global user.name coral-version

    - npm install
  script:
    - mkdir -p data
    - node scripts/fetch-itunes.js 1234806557 > data/coral-itunes.json
    - node scripts/fetch-itunes.js 1190074407 > data/moon-itunes.json
    - node scripts/fetch-itunes.js 6466376604 > data/bremen-itunes.json
    - node scripts/fetch-itunes.js 1495746988 JP > data/entry-itunes.json
    - node scripts/fetch-itunes.js 6736725704 > data/aquavast-itunes.json
    - node scripts/fetch-google-play.js com.nintendo.znca > data/coral-google-play.json
    - node scripts/fetch-google-play.js com.nintendo.znma > data/moon-google-play.json
    - node scripts/fetch-google-play.js com.nintendo.znba > data/bremen-google-play.json
    - node scripts/fetch-google-play.js com.nintendo.znej JP > data/entry-google-play.json
    - node scripts/fetch-google-play.js com.nintendo.znsa > data/aquavast-google-play.json
    - node scripts/fetch-nintendo-jp.js nintendo_switch_online_app > data/coral-nintendo-jp.json
    - node scripts/fetch-nintendo-jp.js nintendo_switch_parental_controls_app > data/moon-nintendo-jp.json
    - node scripts/fetch-nintendo-eu.js 1520024 > data/coral-nintendo-eu.json
    - node scripts/fetch-nintendo-eu.js 1497986 > data/moon-nintendo-eu.json

    - DISCORD_WEBHOOK_MENTION="&1002674504570515476" node scripts/notify.js coral
    - DISCORD_WEBHOOK_MENTION="&1002674644874170398" node scripts/notify.js moon
    - DISCORD_WEBHOOK_MENTION="&1319843921161097258" node scripts/notify.js bremen
    - DISCORD_WEBHOOK_MENTION="&1319848507519012875" node scripts/notify.js entry
    - DISCORD_WEBHOOK_MENTION="&1354843724911481023" node scripts/notify.js aquavast

    - node scripts/splatnet3.js > data/splatnet3-app.json
    - DISCORD_WEBHOOK_MENTION="&1024054290681184327" node scripts/notify-webapp.js splatnet3
    - node scripts/nooklink.js > data/nooklink-app.json
    - DISCORD_WEBHOOK_MENTION="&1031566603701207141" node scripts/notify-webapp.js nooklink
    - node scripts/tournamentmanager.js > data/tournament-manager-app.json
    - DISCORD_WEBHOOK_MENTION="&1174547361742200943" node scripts/notify-webapp.js tournament-manager

    - NODE_EXTRA_CA_CERTS=./nintendo-ca-g4.pem node scripts/lhub.js > data/lhub-app.json
    - DISCORD_WEBHOOK_MENTION="&1131060995637399582" node scripts/notify-webapp.js lhub

    - git add data/* || true
    - git status
    - git commit -m "Update versions" || true
    - git remote rm origin && git remote add origin git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
    - git push origin HEAD:$CI_COMMIT_REF_NAME
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_AUTHOR == "coral-version <coral-version@localhost>"
      when: never
    - when: always
  resource_group: update-versions
  retry: 2

pages:
  stage: deploy
  image: alpine
  script:
    - mkdir -p public
    - cp -R data public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"
      changes:
        - .gitlab-ci.yml
        - data/*
  environment:
    name: GitLab Pages
    url: $CI_PAGES_URL

trigger-analyse/splatnet3:
  stage: deploy
  trigger:
    project: $SPLATNET3_APP_RESOURCES_PROJECT
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main" && $SPLATNET3_APP_RESOURCES_PROJECT
      changes:
        - data/splatnet3-app.json

trigger-analyse/nooklink:
  stage: deploy
  trigger:
    project: $NOOKLINK_APP_RESOURCES_PROJECT
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main" && $NOOKLINK_APP_RESOURCES_PROJECT
      changes:
        - data/nooklink-app.json

trigger-analyse/lhub:
  stage: deploy
  trigger:
    project: $LHUB_APP_RESOURCES_PROJECT
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main" && $LHUB_APP_RESOURCES_PROJECT
      changes:
        - data/lhub-app.json

trigger-analyse/tournament-manager:
  stage: deploy
  trigger:
    project: $TOURNAMENT_MANAGER_RESOURCES_PROJECT
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main" && $TOURNAMENT_MANAGER_RESOURCES_PROJECT
      changes:
        - data/tournament-manager-app.json
